[{"C:\\Users\\ligeo\\Documents\\Code\\FullStackOpen\\part1\\unicafe\\src\\index.js":"1"},{"size":1978,"mtime":1608841182859,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1ove2y","C:\\Users\\ligeo\\Documents\\Code\\FullStackOpen\\part1\\unicafe\\src\\index.js",["7","8","9","10"],"import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst Button = ({handleClick, text}) => (\n    <button onClick={handleClick}>\n      {text}\n    </button>\n)\n\nconst Title = ({text}) => (\n  <h1>\n    {text}\n  </h1>\n)\nconst Statistic = ({text, value, final}) => {\n  if (isNaN(value)){\n    return(\n      <>\n      <tr>\n        <td> {text} </td>\n        <td> 0 {final} </td>\n      </tr>\n      </>\n    )\n  }\n  return(\n      <>\n      <tr>\n        <td> {text} </td> \n        <td> {value} {final}</td>\n      </tr>\n      </>\n    )\n  }\n\nconst Statistics = ({good, neutral, bad}) => {\n  let all = good + neutral + bad;\n  if (good == 0 && neutral == 0 && bad == 0){\n    return (\n      <>\n      <Title text='statistics'/>\n      <div>\n        <p>No feedback given</p>\n      </div>\n      </>\n    )\n  }\n  return (\n  <>\n    <Title text='statistics'/>\n    <div>\n      <table>\n        <Statistic text='good' value={good}/>\n        <Statistic text='neutral' value={neutral}/>\n        <Statistic text='bad' value={bad}/>\n        <Statistic text='all' value={all}/>\n        <Statistic text='average' value={(good - bad)/all}/>\n        <Statistic text='positive' value={good/all * 100} final='%'/>\n      </table>\n    </div>\n  </>\n  )\n}\n\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const increaseGood = () => setGood(good + 1);\n  const increaseBad = () => setBad(bad + 1);\n  const increaseNeutral = () => setNeutral(neutral + 1);\n  let all = good + bad + neutral;\n  return (\n    <div>\n      <Title text='give feedback'/>\n        <div>\n          <Button handleClick={increaseGood} text='good'/>\n          <Button handleClick={increaseNeutral} text='neutral'/>\n          <Button handleClick={increaseBad} text='bad'/>  \n        </div>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n",{"ruleId":"11","severity":1,"message":"12","line":39,"column":12,"nodeType":"13","messageId":"14","endLine":39,"endColumn":14},{"ruleId":"11","severity":1,"message":"12","line":39,"column":28,"nodeType":"13","messageId":"14","endLine":39,"endColumn":30},{"ruleId":"11","severity":1,"message":"12","line":39,"column":40,"nodeType":"13","messageId":"14","endLine":39,"endColumn":42},{"ruleId":"15","severity":1,"message":"16","line":75,"column":7,"nodeType":"17","messageId":"18","endLine":75,"endColumn":10},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'all' is assigned a value but never used.","Identifier","unusedVar"]